Traceback (most recent call last):
  File "/opt/jupyterhub/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/jupyterhub/lib/python3.10/site-packages/nbclient/client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/jupyterhub/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
  File "/usr/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/jupyterhub/lib/python3.10/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/opt/jupyterhub/lib/python3.10/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/jupyterhub/lib/python3.10/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Function to ensure valid numeric input
def get_valid_float(prompt):
    while True:
        try:
            return float(input(prompt))
        except ValueError:
            print("Invalid input. Please enter a numeric value.")

# Function to ensure valid string input
def get_valid_string(prompt, default="Not Specified"):
    while True:
        user_input = input(prompt).strip()
        if user_input:
            return user_input
        else:
            print(f"Invalid input. Defaulting to '{default}'.")
            return default

# Prompt for inputs
liquidName = get_valid_string("Enter the name of the liquid (default: Not Specified): ")
mass_Beaker = get_valid_float("Enter the mass of the beaker (g): ")
mass_LiquidAndBeaker = get_valid_float("Enter the mass of the liquid and beaker combined (g): ")
vol_Liquid = get_valid_float("Enter the volume of the liquid (mL): ")

# Convert volume to liters
vol_Liquid = vol_Liquid / 1000  # Convert mL to Liters

# Calculate density
density = (mass_LiquidAndBeaker - mass_Beaker) / vol_Liquid

# Output the result
print("\nResults:")
print(f"Liquid Name: {liquidName}")
print(f"Density of {liquidName}: {round(density, 3)} g/L")
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mStdinNotImplementedError[0m                  Traceback (most recent call last)
Cell [0;32mIn[1], line 20[0m
[1;32m     17[0m             [38;5;28;01mreturn[39;00m default
[1;32m     19[0m [38;5;66;03m# Prompt for inputs[39;00m
[0;32m---> 20[0m liquidName [38;5;241m=[39m [43mget_valid_string[49m[43m([49m[38;5;124;43m"[39;49m[38;5;124;43mEnter the name of the liquid (default: Not Specified): [39;49m[38;5;124;43m"[39;49m[43m)[49m
[1;32m     21[0m mass_Beaker [38;5;241m=[39m get_valid_float([38;5;124m"[39m[38;5;124mEnter the mass of the beaker (g): [39m[38;5;124m"[39m)
[1;32m     22[0m mass_LiquidAndBeaker [38;5;241m=[39m get_valid_float([38;5;124m"[39m[38;5;124mEnter the mass of the liquid and beaker combined (g): [39m[38;5;124m"[39m)

Cell [0;32mIn[1], line 12[0m, in [0;36mget_valid_string[0;34m(prompt, default)[0m
[1;32m     10[0m [38;5;28;01mdef[39;00m [38;5;21mget_valid_string[39m(prompt, default[38;5;241m=[39m[38;5;124m"[39m[38;5;124mNot Specified[39m[38;5;124m"[39m):
[1;32m     11[0m     [38;5;28;01mwhile[39;00m [38;5;28;01mTrue[39;00m:
[0;32m---> 12[0m         user_input [38;5;241m=[39m [38;5;28;43minput[39;49m[43m([49m[43mprompt[49m[43m)[49m[38;5;241m.[39mstrip()
[1;32m     13[0m         [38;5;28;01mif[39;00m user_input:
[1;32m     14[0m             [38;5;28;01mreturn[39;00m user_input

File [0;32m/opt/jupyterhub/lib/python3.10/site-packages/ipykernel/kernelbase.py:1281[0m, in [0;36mKernel.raw_input[0;34m(self, prompt)[0m
[1;32m   1279[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m [38;5;28mself[39m[38;5;241m.[39m_allow_stdin:
[1;32m   1280[0m     msg [38;5;241m=[39m [38;5;124m"[39m[38;5;124mraw_input was called, but this frontend does not support input requests.[39m[38;5;124m"[39m
[0;32m-> 1281[0m     [38;5;28;01mraise[39;00m StdinNotImplementedError(msg)
[1;32m   1282[0m [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39m_input_request(
[1;32m   1283[0m     [38;5;28mstr[39m(prompt),
[1;32m   1284[0m     [38;5;28mself[39m[38;5;241m.[39m_parent_ident[[38;5;124m"[39m[38;5;124mshell[39m[38;5;124m"[39m],
[1;32m   1285[0m     [38;5;28mself[39m[38;5;241m.[39mget_parent([38;5;124m"[39m[38;5;124mshell[39m[38;5;124m"[39m),
[1;32m   1286[0m     password[38;5;241m=[39m[38;5;28;01mFalse[39;00m,
[1;32m   1287[0m )

[0;31mStdinNotImplementedError[0m: raw_input was called, but this frontend does not support input requests.

